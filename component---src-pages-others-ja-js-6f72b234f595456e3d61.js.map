{"version":3,"file":"component---src-pages-others-ja-js-6f72b234f595456e3d61.js","mappings":"qIAGYA,GAAAA,OAAiBC,U,oJCA7B,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,GAAI,KAAM,gBAAiB,KAAMO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,aAAc,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,wCAAyC,KAAMI,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,mDAAoD,KAAMI,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,gDAAiD,KAAMI,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,gDAAiD,MAAO,KAAMI,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,YAAa,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,sCAAuC,MAAO,KAAMI,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,2CAA4C,MAAO,KAAMI,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,uBAAwB,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAMI,EAAAA,cAAoBV,EAAYO,EAAG,CAC9rCI,KAAM,iEACL,gCAAiC,KAAMD,EAAAA,cAAoBV,EAAYM,GAAI,KAAMI,EAAAA,cAAoBV,EAAYO,EAAG,CACrHI,KAAM,gEACL,iBAAkB,MACvB,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWd,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,ECDO,SAASe,IACd,OAAOJ,EAAAA,cAACK,EAAAA,EAAG,CAACC,MAAM,MAAMC,KAAK,MAC/B,CAEA,MAboBC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC/BR,EAAAA,cAACU,EAAAA,EAAM,CAACD,SAAUA,GAChBT,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAACW,EAAU,MACJ,C,sECmBJ,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBd,GAC/B,MAAMe,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfb,EACFA,EAAWe,GAGb,IAAIA,KAAsBf,IAChC,CAACe,EAAmBf,GACzB,C","sources":["webpack://gatsby-tkweb/./src/components/defaultPropTypes.js","webpack://gatsby-tkweb/./src/data/others/student.ja.mdx","webpack://gatsby-tkweb/./src/pages/others.ja.js","webpack://gatsby-tkweb/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default propTypes;\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"がくせいじだいのもろもろ\"), \"\\n\", React.createElement(_components.h3, null, \"TA・RAのきろく\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"2013年4月 - 2016年3月 RA: 大阪大学大学院情報科学研究科\"), \"\\n\", React.createElement(_components.li, null, \"2015年10月 - 2016年3月 TA: ソフトウェア開発論、大阪大学大学院情報科学研究科\"), \"\\n\", React.createElement(_components.li, null, \"2012年4月 - 2012年7月 TA: 情報科学実験B、大阪大学基礎工学部情報科学科\"), \"\\n\", React.createElement(_components.li, null, \"2011年4月 - 2011年9月 TA: プログラム設計、大阪大学基礎工学部情報科学科\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"インターンシップ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"2012年7月 - 2012年8月: 株式会社日立製作所 横浜研究所\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"受講\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"先導的ITスペシャリスト育成推進プログラム IT Spiral 2011 修了\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Androidアプリ（井上研新人研修）\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://sel.ist.osaka-u.ac.jp/android/android2010/myfibo.html\"\n  }, \"My Fibonacci（フィボナッチ数列計算アプリ）\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://sel.ist.osaka-u.ac.jp/android/android2010/oubus.html\"\n  }, \"大阪大学スクールバス案内\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nimport propTypes from \"../components/defaultPropTypes\";\r\n\r\nimport StudentMDX from \"../data/others/student.ja.mdx\";\r\n//import HobbyMDX from \"../data/others/hobby.ja.mdx\";\r\n\r\nconst ServicePage = ({ location }) => (\r\n  <Layout location={location}>\r\n    <h1>そのほか</h1>\r\n    <StudentMDX />\r\n  </Layout>\r\n);\r\n\r\nServicePage.propTypes = propTypes;\r\n\r\nexport function Head() {\r\n  return <SEO title=\"その他\" lang=\"ja\" />;\r\n}\r\n\r\nexport default ServicePage;\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["PropTypes","isRequired","_createMdxContent","props","_components","Object","assign","h2","h3","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","Head","SEO","title","lang","_ref","location","Layout","StudentMDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}